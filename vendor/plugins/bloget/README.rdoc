= Bloget (with multisite modification)

(rhymes with blasÃ©)

Bloget is a plugin application that gives you a simple weblog.

When you install Bloget, some lightweight controllers, models, and views will be copied into your Rails application. You will most likely override things in these models and controllers and edit these views.

Bloget uses polymorphic associations for its idea of a +poster+, or an object that can make weblog posts and comments. This is so you can easily integrate it into your application.

The multisite modification also uses a polymorphic association for its idea of a +blog+.  This might be associated with a site record in your application.

== Requirements

=== Edge Rails

Bloget requires Edge Rails. It is being developed on revision 7661 currently, although it is known to work with revisions at least two weeks before that.

=== Other plugins

Bloget does not require any other plugins. However, some are useful.

You need some way to handle authentication. The RESTful Authentication plugin will work for this seamlessly. If you use something else, you must define the methods +logged_in?+ and +current_user+ in +ApplicationController+. +current_user+ must return an object that can match up with Bloget's +poster+ object.

The Will Paginate plugin is also not necessary, but very useful. Bloget will detect it and paginate.

The account_location plugin can be used to create a multisite setup, following the instructions here:

  http://railstips.org/2006/11/13/building-a-multi-site-supported-application

== Integration

=== Integrating with a user model

In your user model:

    has_one :blogger, :as => :poster
    has_many :posts, :as => :poster
    has_many :comments, :as => :poster
    
=== Multisite Integration

In your site model:

    has_many :posts, :as => :blog

If you are using the account_location plugin, you can add
the following to the application controller:

    include AccountLocation

    before_filter :find_current_site
    helper_method :current_site
    attr_reader   :current_site
    helper_method :current_blog
    attr_reader   :current_blog

    private

      def find_current_site
        @current_site = Site.find_by_subdomain(account_subdomain)
        @current_blog = @current_site
      end

The modified 'posts' controller uses whatever is returned by
'current_blog' to tie a post to a particular site/blog/etc.
 
=== Templates

By default, the controllers specify a layout of "bloget," which is installed with Bloget. You can override this in the copied controllers.

This layout references +bloget.css+, which is installed in your +public/stylesheets+ directory.

=== Routes

You will need to add these routes, or routes like them, to +config/routes.rb+:

    map.resources :posts do |post|
      post.resources :comments
    end
    
If you would like to show your posts at the URL '/blog', you may want to add the following routes:

    map.with_options :controller => 'posts', :conditions => {:method => :get} do |bloget|
      bloget.blog '/blog', :action => 'index'
      bloget.formatted_blog '/blog.:format', :action => 'index'
    end

Copyright (c) 2007-2008 Clinton R. Nixon of Viget Labs, released under the MIT license
Modifications Copyright (c) 2009 Jim Pick <jim@jimpick.com>, released under the MIT license

